class OpenAI {
  static final String _apikey = dotenv.env[apiKey]!;
  final String openAIModel;
  final String systemRole;
  final String userPrompt;
  final int maxTokens;

  OpenAI({
    required this.openAIModel,
    required this.systemRole,
    required this.userPrompt,
    required this.maxTokens,
  });

  Future<Map<String, dynamic>> testPrompt() async {
    const url = 'https://api.openai.com/v1/chat/completions';
    final headers = {
      'Content-Type': 'application/json',
      'Authorization': 'Bearer $_apikey',
    };
    final body = jsonEncode({
      'model': openAIModel,
      'messages': [
        {'role': 'system', 'content': systemRole},
        {'role': 'user', 'content': userPrompt}
      ],
      'max_tokens': maxTokens,
    });
    try {
      final response = await http.post(Uri.parse(url), headers: headers, body: body);
      if (response.statusCode == 200) {
        final data = jsonDecode(response.body);
        String responseText = data['choices'][0]['message']['content'].trim();
        Map<String, dynamic> jsonResponse = jsonDecode(responseText);
        return jsonResponse;
      } else {
        throw Exception('Failed to load data: ${response.statusCode} ${response.reasonPhrase}');
      }
    } catch (e) {
      throw Exception('Failed to load data: $e');
    }
  }
}

final jobDescription = {
    "job_description": "Software Engineer at XYZ Corp. Responsibilities include developing software, collaborating with teams, and troubleshooting issues.",
    "required_skills": "Required skills: Python, Java, problem-solving."
};
final openAI = OpenAI(
openAIModel: gpt_3_5_turbo, // or any other model you are using
systemRole: 'You are an assistant that helps extract structured information from job descriptions and resumes.',
userPrompt: '''Extract the following information from the job description and return it in JSON format:
            1. Job Title
            2. Company
            3. Responsibilities
            4. Required Skills
            Input:
            ${jsonEncode(jobDescription)}
            Return the information in the following JSON format:
            {
                "job_title": "",
                "company": "",
                "responsibilities": [],
                "required_skills": []
            }''',
maxTokens: 150,
);
try {
    Map<String, dynamic> result = await openAI.testPrompt();
    // Access the contents of the JSON
    String jobTitle = result['job_title'];
    String company = result['company'];
    List<dynamic> responsibilities = result['responsibilities'];
    List<dynamic> requiredSkills = result['required_skills'];
    print('Job Title: $jobTitle');
    print('Company: $company');
    print('Responsibilities: $responsibilities');
    print('Required Skills: $requiredSkills');
} catch (e) {
    print('Error: $e');
}